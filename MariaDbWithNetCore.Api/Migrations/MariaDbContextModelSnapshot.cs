// <auto-generated />
using System;
using MariaDbWithNetCore.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MariaDbWithNetCore.Api.Migrations
{
    [DbContext(typeof(MariaDbContext))]
    partial class MariaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MariaDbWithNetCore.Model.Entity.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("LatinName");

                    b.Property<string>("Name");

                    b.HasKey("GroupId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("MariaDbWithNetCore.Model.Entity.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("GroupId");

                    b.Property<string>("LatinName");

                    b.Property<string>("Name");

                    b.Property<string>("ProductCode");

                    b.Property<string>("Size");

                    b.Property<string>("Summery");

                    b.Property<string>("Type");

                    b.Property<short>("UnitSize");

                    b.HasKey("ProductId");

                    b.HasIndex("GroupId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("MariaDbWithNetCore.Model.Entity.ProductImage", b =>
                {
                    b.Property<int>("ProductImageId")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("Order");

                    b.Property<int>("ProductId");

                    b.Property<string>("Url");

                    b.HasKey("ProductImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImage");
                });

            modelBuilder.Entity("MariaDbWithNetCore.Model.Entity.ProductInStore", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("StoreId");

                    b.Property<bool>("HasShortage")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ShortageDateTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 5, 19, 1, 53, 13, 915, DateTimeKind.Local).AddTicks(7586));

                    b.HasKey("ProductId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("ProductInStore");
                });

            modelBuilder.Entity("MariaDbWithNetCore.Model.Entity.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<short>("EndTime");

                    b.Property<string>("Grade");

                    b.Property<string>("IBAN");

                    b.Property<string>("Location");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<string>("Responsible");

                    b.Property<short>("StartTime");

                    b.Property<string>("Telephone");

                    b.HasKey("StoreId");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("MariaDbWithNetCore.Model.Entity.StoreShare", b =>
                {
                    b.Property<int>("StoreId");

                    b.Property<int>("GroupId");

                    b.Property<short>("SharePercent")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue((short)0);

                    b.HasKey("StoreId", "GroupId");

                    b.HasAlternateKey("GroupId", "StoreId");

                    b.ToTable("StoreShare");
                });

            modelBuilder.Entity("MariaDbWithNetCore.Model.Entity.Product", b =>
                {
                    b.HasOne("MariaDbWithNetCore.Model.Entity.Group", "Group")
                        .WithMany("Products")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MariaDbWithNetCore.Model.Entity.ProductImage", b =>
                {
                    b.HasOne("MariaDbWithNetCore.Model.Entity.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MariaDbWithNetCore.Model.Entity.ProductInStore", b =>
                {
                    b.HasOne("MariaDbWithNetCore.Model.Entity.Product", "Product")
                        .WithMany("ProductInStores")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MariaDbWithNetCore.Model.Entity.Store", "Store")
                        .WithMany("ProductInStores")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MariaDbWithNetCore.Model.Entity.StoreShare", b =>
                {
                    b.HasOne("MariaDbWithNetCore.Model.Entity.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MariaDbWithNetCore.Model.Entity.Store", "Store")
                        .WithMany("StoreShares")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
